{"data":{"markdownRemark":{"fields":{"slug":"/customer_apis/","readingTime":{"text":"13 min read"}},"frontmatter":{"title":"Customer API"},"html":"<h2 id=\"authentication-mechanism\"><a href=\"#authentication-mechanism\" aria-label=\"authentication mechanism permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Authentication mechanism</h2>\n<p>We use HMAC authentication which has been widely used by Amazon and Google to grant\naccess to many of their APIs.</p>\n<p>How it works:</p>\n<ol>\n<li>\n<p>API access key is a pair:</p>\n<ul>\n<li>Access key ID: a unique identifier (UUID) of the API access key.</li>\n<li>Access key secret: a secret key that will be used to sign the requests.</li>\n</ul>\n<p>TrustVision team will create access key ID and access key secret for each customers before integration.</p>\n</li>\n<li>\n<p>Client signs a request:</p>\n<p>The client must generate a signature for each request, and send it in the\n<code class=\"language-text\">Authorization</code> header. Following is pseudo code that illustrates the\nconstruction of the <code class=\"language-text\">Authorization</code> request header:</p>\n<div class=\"gatsby-highlight\" data-language=\"code\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-code line-numbers\"><code class=\"language-code\">Authorization = &quot;TV&quot; + &quot; &quot; + AccessKeyID + &quot;:&quot; + Signature;\n\nSignature = Base64( HMAC-SHA256( AccessKeySecret, UTF-8-Encoding-Of( StringToSign ) ) );\n\nStringToSign = HTTP-Verb + &quot;\\n&quot; + URI + &quot;\\n&quot; + Timestamp;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Where:</p>\n<ul>\n<li>AccessKeyID and AccessKeySecret: are the access key provided by Trust Vision.</li>\n<li>HTTP-Verb: is either <code class=\"language-text\">POST</code> <code class=\"language-text\">GET</code> <code class=\"language-text\">PUT</code> <code class=\"language-text\">PATCH</code> <code class=\"language-text\">DELETE</code>.</li>\n<li>URI: is the relative route path of the resource (exclude the domain).</li>\n<li>Timestamp: the time of the request in RFC3339 format. The client must also\nsend this timestamp with the request in the <code class=\"language-text\">X-TV-Timestamp</code> header.</li>\n</ul>\n<p>Example:</p>\n<ul>\n<li>\n<p>API Access key:</p>\n<ul>\n<li>Access key ID: <code class=\"language-text\">62C1EB34-CB6A-41CE-AA5D-54C317954242</code></li>\n<li>Access key secret: <code class=\"language-text\">42*Esi8e#1aWb55KQ3UnOe4JVcuNS2ns</code></li>\n</ul>\n</li>\n<li>\n<p>Request:</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"curl\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-curl line-numbers\"><code class=\"language-curl\">curl -X POST \\\nhttps://tv-testing.trustingsocial.com/tv_api/v1/images \\\n-H &#39;Authorization: TV 62C1EB34-CB6A-41CE-AA5D-54C317954242:7R2t1HSzE40HN51ydeNJ5f3NLIEyWp1dZIt3BUxE51U=&#39; \\\n-H &#39;X-TV-Timestamp: 2019-04-21T18:00:15+07:00&#39; \\\n-H &#39;content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW&#39; \\\n-F file=@/images/portrait.jpg</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>String to sign:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">POST\\n/v1/images\\n2019-04-21T18:00:15+07:00</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</li>\n<li>\n<p>Server verifies the request signature:</p>\n<p>To verify the signature, the server first takes the request timestamp from\n<code class=\"language-text\">X-TV-Timestamp</code> header, compares it with current timestamp of the server.\nIf the difference between 2 timestamps is more than 15 minutes, it will\nreject the request and return <code class=\"language-text\">RequestTimeTooSkewed</code> error to the client.\nThe intention of this restriction is to limit the possibility that\nintercepted requests could be replayed by an adversary.</p>\n<p>If the timestamp is within the limit, the server will then parse value from\n<code class=\"language-text\">Authorization</code> header to get <code class=\"language-text\">AccessKeyID</code> and <code class=\"language-text\">Signature</code> (separated by <code class=\"language-text\">:</code>).\nIt looks up <code class=\"language-text\">AccessKeyID</code> to get the corresponding <code class=\"language-text\">AccessKeySecret</code>.</p>\n<p>After that, the server uses the request timestamp to generate the string to\nsign, and use the <code class=\"language-text\">AccessKeySecret</code> to creates the signature with the same\nmethod as described before.</p>\n<p>Finally, the request is authorized if the generated signature matches the\nrequest signature.</p>\n</li>\n</ol>\n<h2 id=\"interaction-flows\"><a href=\"#interaction-flows\" aria-label=\"interaction flows permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interaction Flows</h2>\n<h3 id=\"flow-1-compare-faces-between-images\"><a href=\"#flow-1-compare-faces-between-images\" aria-label=\"flow 1 compare faces between images permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flow 1: Compare faces between images</h3>\n<p><a href=\"https://swimlanes.io/d/bG0Nf-0xm\"><img src=\"https://static.swimlanes.io/daa882c11dff1ba9a48534d037ffee7d.png\" alt=\"Flow 1: Compare faces between 2 images\"></a></p>\n<h3 id=\"flow-2-verify-face-liveness-in-images\"><a href=\"#flow-2-verify-face-liveness-in-images\" aria-label=\"flow 2 verify face liveness in images permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flow 2: Verify face liveness in images</h3>\n<p>Note that we're going towards no-gesture liveness verification, however we can\nalso support gesture based liveness verification, so in this flow, we allow\nclients to send at most 3 images with optional gestures (more than 3 can create\nbad user experience, we're aiming for using only 1).</p>\n<p><a href=\"https://swimlanes.io/d/LG0aS5vDZ\"><img src=\"https://static.swimlanes.io/cc1af44fa4d0860755893ea35d3a7c81.png\" alt=\"Flow 2: Verify face liveness in images\"></a></p>\n<h2 id=\"list-of-apis\"><a href=\"#list-of-apis\" aria-label=\"list of apis permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List of APIs</h2>\n<h3 id=\"upload-image\"><a href=\"#upload-image\" aria-label=\"upload image permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Upload Image</h3>\n<ol>\n<li>\n<p>Request</p>\n<p>Client should call this API:</p>\n<table>\n<thead>\n<tr>\n<th>method</th>\n<th>URL</th>\n<th>content-type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>POST</td>\n<td><code class=\"language-text\">/v1/images</code></td>\n<td><code class=\"language-text\">multipart/form-data</code></td>\n</tr>\n</tbody>\n</table>\n<p>With following parameters:</p>\n<table>\n<thead>\n<tr>\n<th>field</th>\n<th>type</th>\n<th>required</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">file</code></td>\n<td>file</td>\n<td>yes</td>\n<td>the image file to be uploaded</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">label</code></td>\n<td>string</td>\n<td>no</td>\n<td>label of the image</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">metadata</code></td>\n<td>dictionary</td>\n<td>no</td>\n<td>any key-value metadata to save with the image, both key and value should be string</td>\n</tr>\n</tbody>\n</table>\n<p>Image label should be one of following values:</p>\n<table>\n<thead>\n<tr>\n<th>label</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">portrait</code></td>\n<td>the portrait photo</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.in.aadhaar.front</code></td>\n<td>the front side of India Aadhaar card</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.in.aadhaar.back</code></td>\n<td>the back side of India Aadhaar card</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.in.pan.front</code></td>\n<td>the front side of India PAN card</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.in.pan.back</code></td>\n<td>the back side of India PAN card</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.in.voter.front</code></td>\n<td>the front side of India Voter card</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.in.passport.front</code></td>\n<td>the front side of India passport</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.vn.cmnd_old.front</code></td>\n<td>the front side of Vietnam national ID old version (Chứng minh nhân dân cũ)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.vn.cmnd_old.back</code></td>\n<td>the back side of Vietnam national ID old version (Chứng minh nhân dân cũ)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.vn.cmnd_new.front</code></td>\n<td>the front side of Vietnam national ID new version (Chứng minh nhân dân mới)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.vn.cmnd_new.back</code></td>\n<td>the back side of Vietnam national ID new version (Chứng minh nhân dân mới)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.vn.cccd.front</code></td>\n<td>the front side of Vietnam national ID latest version (Căn cước công dân)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.vn.cccd.back</code></td>\n<td>the back side of Vietnam national ID latest version (Căn cước công dân)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">id_card.vn.passport.front</code></td>\n<td>the front side of Vietnam passport</td>\n</tr>\n</tbody>\n</table>\n<p>Authentication mechanism is described in <a href=\"#authentication-mechanism\">Authentication</a>.</p>\n</li>\n<li>\n<p>Response</p>\n<p>The response will be a JSON with following format:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"image_id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// ID of the uploaded image in StoreDB</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"errors\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"detail\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">\"field\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional, which parameter is invalid.</span>\n                <span class=\"token operator\">...</span> <span class=\"token comment\">// any other information that can be useful for client</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span> <span class=\"token comment\">// other errors</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>In case of success, the HTTP status code will be 200, and the <code class=\"language-text\">data</code> will be\nan object containing following fields:</p>\n<table>\n<thead>\n<tr>\n<th>field</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">image_id</code></td>\n<td>string</td>\n<td>ID of the uploaded image (UUID)</td>\n</tr>\n</tbody>\n</table>\n<p>In case of error, the <code class=\"language-text\">data</code> will be empty, and server sends following HTTP\nstatus code and error information:</p>\n<table>\n<thead>\n<tr>\n<th>HTTP code</th>\n<th>error code</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>400</td>\n<td><code class=\"language-text\">invalid_parameter_exception</code></td>\n<td>Input parameter violates a constraint.</td>\n</tr>\n<tr>\n<td>401</td>\n<td><code class=\"language-text\">access_denied_exception</code></td>\n<td>You are not authorized to perform the action.</td>\n</tr>\n<tr>\n<td>413</td>\n<td><code class=\"language-text\">image_too_large_exception</code></td>\n<td>The input image size exceeds the allowed limit (15MB).</td>\n</tr>\n<tr>\n<td>415</td>\n<td><code class=\"language-text\">invalid_image_format_exception</code></td>\n<td>The provided image format is not supported (JPG/PNG)</td>\n</tr>\n<tr>\n<td>429</td>\n<td><code class=\"language-text\">rate_limit_exception</code></td>\n<td>The number of requests exceeded your throughput limit.</td>\n</tr>\n<tr>\n<td>500</td>\n<td><code class=\"language-text\">internal_server_error</code></td>\n<td>Some unexpected error occurs while processing the request</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n<h3 id=\"compare-face-between-2-images\"><a href=\"#compare-face-between-2-images\" aria-label=\"compare face between 2 images permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compare face between 2 images</h3>\n<ol>\n<li>\n<p>Request</p>\n<p>Client should call this API:</p>\n<table>\n<thead>\n<tr>\n<th>method</th>\n<th>URL</th>\n<th>content-type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>POST</td>\n<td><code class=\"language-text\">/v1/compare_faces</code></td>\n<td><code class=\"language-text\">application/json</code></td>\n</tr>\n</tbody>\n</table>\n<p>Body:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"image1_id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"image2_id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Where:</p>\n<table>\n<thead>\n<tr>\n<th>key</th>\n<th>type</th>\n<th>required</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">image1_id</code></td>\n<td>string</td>\n<td>yes</td>\n<td>ID of image1 in Store DB</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">image2_id</code></td>\n<td>string</td>\n<td>yes</td>\n<td>ID of image2 in Store DB</td>\n</tr>\n</tbody>\n</table>\n<p>Authentication mechanism is described in <a href=\"#authentication-mechanism\">Authentication</a>.</p>\n</li>\n<li>\n<p>Response</p>\n<p>The response will be a JSON with following format:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"request_id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// \"processing\", \"success\" or \"failure\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"errors\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"detail\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">\"field\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional, which parameter is invalid.</span>\n                <span class=\"token operator\">...</span> <span class=\"token comment\">// any other information that can be useful for client</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span> <span class=\"token comment\">// other errors</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>In case of success, the HTTP status code will be 200, and the <code class=\"language-text\">data</code> will be\nan object containing following fields:</p>\n<table>\n<thead>\n<tr>\n<th>field</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">request_id</code></td>\n<td>string</td>\n<td>ID of the request (UUID)</td>\n</tr>\n</tbody>\n</table>\n<p>In case of error, the <code class=\"language-text\">data</code> will be empty, and server sends following HTTP\nstatus code and error information:</p>\n<table>\n<thead>\n<tr>\n<th>HTTP code</th>\n<th>error code</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>400</td>\n<td><code class=\"language-text\">invalid_parameter_exception</code></td>\n<td>Input parameter violates a constraint.</td>\n</tr>\n<tr>\n<td>401</td>\n<td><code class=\"language-text\">access_denied_exception</code></td>\n<td>You are not authorized to perform the action.</td>\n</tr>\n<tr>\n<td>404</td>\n<td><code class=\"language-text\">image_not_found_exception</code></td>\n<td>The image ID is not found in Store DB.</td>\n</tr>\n<tr>\n<td>415</td>\n<td><code class=\"language-text\">invalid_image_format_exception</code></td>\n<td>The provided image format is not supported (JPG/PNG)</td>\n</tr>\n<tr>\n<td>429</td>\n<td><code class=\"language-text\">rate_limit_exception</code></td>\n<td>The number of requests exceeded your throughput limit.</td>\n</tr>\n<tr>\n<td>500</td>\n<td><code class=\"language-text\">internal_server_error</code></td>\n<td>Some unexpected error occurs while processing the request</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n<h3 id=\"get-compare-faces-result\"><a href=\"#get-compare-faces-result\" aria-label=\"get compare faces result permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get compare faces result</h3>\n<ol>\n<li>\n<p>Request</p>\n<p>Client should call this API:</p>\n<table>\n<thead>\n<tr>\n<th>method</th>\n<th>URL</th>\n<th>content-type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td><code class=\"language-text\">/v1/compare_faces/{request_id}</code></td>\n<td><code class=\"language-text\">application/json</code></td>\n</tr>\n</tbody>\n</table>\n<p>Where <code class=\"language-text\">request_id</code> is the ID of the request returned in previous API call.</p>\n</li>\n<li>\n<p>Response</p>\n<p>The response will be a JSON body with following format:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// \"processing\", \"success\" or \"failure\"</span>\n        <span class=\"token string\">\"image1\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"transformed_image_id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token comment\">// optional, just in case the image is transformed</span>\n            <span class=\"token string\">\"faces\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// id of the face in image1</span>\n                    <span class=\"token string\">\"bounding_box\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token string\">\"top\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// the top edge of the box</span>\n                        <span class=\"token string\">\"right\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// the right edge of the box</span>\n                        <span class=\"token string\">\"bottom\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// the bottom edge of the box</span>\n                        <span class=\"token string\">\"left\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// the left edge of the box</span>\n                        <span class=\"token string\">\"angle\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token comment\">// the angle at which the box is rotated</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">...</span> <span class=\"token comment\">// other faces in image1</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"image2\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"transformed_image_id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token comment\">// optional, just in case the image is transformed</span>\n            <span class=\"token string\">\"faces\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// id of the face in image2</span>\n                    <span class=\"token string\">\"bounding_box\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token string\">\"top\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// the top edge of the box</span>\n                        <span class=\"token string\">\"right\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// the right edge of the box</span>\n                        <span class=\"token string\">\"bottom\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// the bottom edge of the box</span>\n                        <span class=\"token string\">\"left\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// the left edge of the box</span>\n                        <span class=\"token string\">\"angle\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token comment\">// the angle at which the box is rotated</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">...</span> <span class=\"token comment\">// other faces in image2</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"compare_faces\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">\"face1_id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// id of the face in image1</span>\n                <span class=\"token string\">\"face2_id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// id of the face in image2</span>\n                <span class=\"token string\">\"score\"</span><span class=\"token punctuation\">:</span> float<span class=\"token punctuation\">,</span> <span class=\"token comment\">// how likely that face1 and face2 are matched (0-1)</span>\n                <span class=\"token string\">\"result\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token comment\">// \"matched\", \"unmatched\", \"unsure\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token operator\">...</span> <span class=\"token comment\">// other pair of faces in image1 and image2</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token string\">\"errors\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"detail\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">\"field\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional, which parameter is invalid.</span>\n                <span class=\"token operator\">...</span> <span class=\"token comment\">// any other information that can be useful for client</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span> <span class=\"token comment\">// other errors</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>In case the request is still being processed, the HTTP status code will be <code class=\"language-text\">200</code>,\nand the <code class=\"language-text\">data.status</code> is <code class=\"language-text\">&quot;processing&quot;</code>:</p>\n<p>In case the request processing has been finished, the HTTP status code will be\n<code class=\"language-text\">200</code>, and the <code class=\"language-text\">data.status</code> is either <code class=\"language-text\">&quot;success&quot;</code> or <code class=\"language-text\">&quot;failure&quot;</code> depending on\nwhether the request has been successfully processed or not.</p>\n<p>If the <code class=\"language-text\">data.status</code> is <code class=\"language-text\">&quot;failure&quot;</code>, the <code class=\"language-text\">&quot;errors&quot;</code> field will tell you why it\nfailed.</p>\n<table>\n<thead>\n<tr>\n<th>error code</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">image_too_blur</code></td>\n<td>the input image is too blur</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">image_too_dark</code></td>\n<td>the input image is too dark</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">image_too_bright</code></td>\n<td>the input image is too bright (glare)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">image_has_no_faces</code></td>\n<td>the input image has no faces</td>\n</tr>\n</tbody>\n</table>\n<p>In case of any other errors, the <code class=\"language-text\">data</code> field will be empty, and the server\nsends one of following HTTP status code with error code:</p>\n<table>\n<thead>\n<tr>\n<th>HTTP code</th>\n<th>error code</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">400</code></td>\n<td><code class=\"language-text\">invalid_parameter_exception</code></td>\n<td>Input parameter violates a constraint.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">401</code></td>\n<td><code class=\"language-text\">access_denied_exception</code></td>\n<td>You are not authorized to perform the action.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">404</code></td>\n<td><code class=\"language-text\">request_not_found_exception</code></td>\n<td>The request ID is not found in Memory Cache and Store DB.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">429</code></td>\n<td><code class=\"language-text\">rate_limit_exception</code></td>\n<td>The number of requests exceeded your throughput limit.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">500</code></td>\n<td><code class=\"language-text\">internal_server_error</code></td>\n<td>Some unexpected error occurs while processing the request</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n<h3 id=\"verify-face-liveness\"><a href=\"#verify-face-liveness\" aria-label=\"verify face liveness permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Verify face liveness</h3>\n<ol>\n<li>\n<p>Request</p>\n<p>Client should call this API:</p>\n<table>\n<thead>\n<tr>\n<th>method</th>\n<th>URL</th>\n<th>content-type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>POST</td>\n<td><code class=\"language-text\">/v1/verify_face_liveness</code></td>\n<td><code class=\"language-text\">application/json</code></td>\n</tr>\n</tbody>\n</table>\n<p>With following form-data fields:</p>\n<table>\n<thead>\n<tr>\n<th>field</th>\n<th>type</th>\n<th>required</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">image_ids</code></td>\n<td>[]string</td>\n<td>yes</td>\n<td>array of image IDs in Store DB</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">gestures</code></td>\n<td>[]string</td>\n<td>no</td>\n<td>array of expected gestures of the face in each image</td>\n</tr>\n</tbody>\n</table>\n<p>For now, we support using at most 3 images (this can be changed in the\nfuture).</p>\n<p>The length of the <code class=\"language-text\">gestures</code> array (if provided) should be equal to the\nlength of <code class=\"language-text\">image_ids</code>.</p>\n<p>Authentication mechanism is described in <a href=\"#authentication-mechanism\">Authentication</a>.</p>\n</li>\n<li>\n<p>Response</p>\n<p>The response will be a JSON with following format:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"request_id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"errors\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"detail\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">\"field\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional, which parameter is invalid.</span>\n                <span class=\"token operator\">...</span> <span class=\"token comment\">// any other information that can be useful for client</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span> <span class=\"token comment\">// other errors</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>In case of success, the HTTP status code will be 200, and the <code class=\"language-text\">data</code> will be\nan object containing following fields:</p>\n<table>\n<thead>\n<tr>\n<th>field</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">request_id</code></td>\n<td>string</td>\n<td>ID of the request (UUID)</td>\n</tr>\n</tbody>\n</table>\n<p>In case of error, the <code class=\"language-text\">data</code> will be empty, and server sends following HTTP\nstatus code and error information:</p>\n<table>\n<thead>\n<tr>\n<th>HTTP code</th>\n<th>error code</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>400</td>\n<td><code class=\"language-text\">invalid_parameter_exception</code></td>\n<td>Input parameter violates a constraint.</td>\n</tr>\n<tr>\n<td>401</td>\n<td><code class=\"language-text\">access_denied_exception</code></td>\n<td>You are not authorized to perform the action.</td>\n</tr>\n<tr>\n<td>404</td>\n<td><code class=\"language-text\">image_not_found_exception</code></td>\n<td>The image ID is not found in Store DB.</td>\n</tr>\n<tr>\n<td>415</td>\n<td><code class=\"language-text\">invalid_image_format_exception</code></td>\n<td>The provided image format is not supported (JPG/PNG)</td>\n</tr>\n<tr>\n<td>429</td>\n<td><code class=\"language-text\">rate_limit_exception</code></td>\n<td>The number of requests exceeded your throughput limit.</td>\n</tr>\n<tr>\n<td>500</td>\n<td><code class=\"language-text\">internal_server_error</code></td>\n<td>Some unexpected error occurs while processing the request</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n<h3 id=\"get-verify-face-liveness-result\"><a href=\"#get-verify-face-liveness-result\" aria-label=\"get verify face liveness result permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get verify face liveness result</h3>\n<ol>\n<li>\n<p>Request</p>\n<p>Client should call this API:</p>\n<table>\n<thead>\n<tr>\n<th>method</th>\n<th>URL</th>\n<th>content-type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td><code class=\"language-text\">/v1/verify_face_liveness/{request_id}</code></td>\n<td><code class=\"language-text\">application/json</code></td>\n</tr>\n</tbody>\n</table>\n<p>Where <code class=\"language-text\">request_id</code> is the ID of the request returned in previous API call.</p>\n</li>\n<li>\n<p>Response</p>\n<p>The response will be a JSON body with following format:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-go line-numbers\"><code class=\"language-go\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// \"processing\", \"success\" or \"failure\"</span>\n        <span class=\"token string\">\"is_live\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// the face is live or not</span>\n        <span class=\"token string\">\"score\"</span><span class=\"token punctuation\">:</span> float <span class=\"token comment\">// how likely that the face is live (0-1)</span>\n        <span class=\"token string\">\"images\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// ID of the image</span>\n                <span class=\"token string\">\"is_live\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// liveness result of this image only</span>\n                <span class=\"token string\">\"score\"</span><span class=\"token punctuation\">:</span> float <span class=\"token comment\">// how likely that the face is live (0-1)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token operator\">...</span> <span class=\"token comment\">// up to 3 images</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"errors\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"detail\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">\"field\"</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// optional, which parameter is invalid.</span>\n                <span class=\"token operator\">...</span> <span class=\"token comment\">// any other information that can be useful for client</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span> <span class=\"token comment\">// other errors</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>In case the request is still being processed, the HTTP status code will be\n<code class=\"language-text\">200</code>, and the <code class=\"language-text\">data.status</code> is <code class=\"language-text\">&quot;processing&quot;</code>:</p>\n<p>In case the request processing has been finished, the HTTP status code will\nbe <code class=\"language-text\">200</code>, and the <code class=\"language-text\">data.status</code> is either <code class=\"language-text\">&quot;success&quot;</code> or <code class=\"language-text\">&quot;failure&quot;</code>,\ndepending on whether the request has been successfully processed or not.</p>\n<p>If the <code class=\"language-text\">data.status</code> is <code class=\"language-text\">&quot;failure&quot;</code>, the <code class=\"language-text\">&quot;errors&quot;</code> field will tell you why\nit failed.</p>\n<table>\n<thead>\n<tr>\n<th>error code</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">image_too_blur</code></td>\n<td>the input image is too blur</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">image_too_dark</code></td>\n<td>the input image is too dark</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">image_too_bright</code></td>\n<td>the input image is too bright (glare)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">image_has_no_faces</code></td>\n<td>the input image has no faces</td>\n</tr>\n</tbody>\n</table>\n<p>In case of any other errors, the <code class=\"language-text\">data</code> field will be empty, and the server\nsends one of following HTTP status code with error code:</p>\n<table>\n<thead>\n<tr>\n<th>HTTP code</th>\n<th>error code</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">400</code></td>\n<td><code class=\"language-text\">invalid_parameter_exception</code></td>\n<td>Input parameter violates a constraint.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">401</code></td>\n<td><code class=\"language-text\">access_denied_exception</code></td>\n<td>You are not authorized to perform the action.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">404</code></td>\n<td><code class=\"language-text\">request_not_found_exception</code></td>\n<td>The request ID is not found in Memory Cache and Store DB.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">429</code></td>\n<td><code class=\"language-text\">rate_limit_exception</code></td>\n<td>The number of requests exceeded your throughput limit.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">500</code></td>\n<td><code class=\"language-text\">internal_server_error</code></td>\n<td>Some unexpected error occurs while processing the request</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/customer_apis/"}}